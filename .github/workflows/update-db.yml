name: Update DB and Rebuild GZ

on:
  workflow_dispatch:
    inputs:
      reason:
        required: false
        type: string
  push:
    paths:
      - 'patches/*.sql'        # També s'executa si es puja un .sql directament

jobs:
  apply-patches:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: false

      - name: Install sqlite3 and gzip
        run: |
          sudo apt-get update
          sudo apt-get install -y sqlite3 gzip file

      - name: Ensure DB exists (handle gzip or raw .db)
        run: |
          set -e
          if [ ! -f public/CollecTF.db ]; then
            if [ -f public/CollecTF.db.gz ]; then
              echo "Checking if CollecTF.db.gz is a real gzip..."
              if file public/CollecTF.db.gz | grep -q 'gzip compressed'; then
                echo "Detected gzip → decompressing..."
                gunzip -c public/CollecTF.db.gz > public/CollecTF.db
              else
                echo "Not a gzip → copying as raw SQLite..."
                cp public/CollecTF.db.gz public/CollecTF.db
              fi
            else
              echo "ERROR: no database found (public/CollecTF.db or .gz)"
              exit 1
            fi
          fi

          echo "DB ready → verifying header:"
          head -c 16 public/CollecTF.db | od -An -tx1

      - name: Apply SQL patches
        run: |
          shopt -s nullglob
          for f in patches/*.sql; do
            echo "Applying patch: $f"
            sqlite3 public/CollecTF.db < "$f"
            rm "$f"
          done

      - name: Rebuild GZ (always create valid gzip)
        run: |
          echo "Recompressing to valid gzip..."
          gzip -c public/CollecTF.db > public/CollecTF.db.gz
          echo "New gzip size:"
          stat -c%s public/CollecTF.db.gz || stat -f%z public/CollecTF.db.gz

      - name: Commit changes
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add public/CollecTF.db public/CollecTF.db.gz || true
          git add -A patches || true

          if ! git diff --cached --quiet; then
            git commit -m "chore(db): apply SQL patches & rebuild valid gzip"

            echo "Pulling latest changes before push..."
            git pull --rebase origin main || echo "Nothing to rebase."

            git push origin main
            echo "Database updated and committed successfully"
          else
            echo "No changes to commit."
          fi

